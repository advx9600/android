add ExtraDaoMater.onCreate(db, con);
	dao-master.ftl  
	class OpenHelper add 
		private Context con;
	function OpenHelper add
		this.con = context;
	class OpenHelper last onCreate add
		ExtraDaoMater.onCreate(db, con);

	Schema.java
	private String extraDaoImport;
	public String getExtraDaoImport() {
		return extraDaoImport;
	}

	public void setExtraDaoImport(String extraDaoImport) {
		this.extraDaoImport = extraDaoImport;
	}	
	
	dao-master.ftl
	<#if schema.extraDaoImport??>import ${schema.extraDaoImport};</#if>
	
add findById(int id)
	dao.ftl
	public ${entity.className} findById(long id){
		java.util.List<${entity.className}> list = queryRaw(
		" where " + Properties.Id.columnName
		+ "=" + id);
		if (list.size()>0){
		return list.get(0);
		}
		return null;
	}

add setDefaultValue(String val);

	Property.java	
		private Object defVal;
		public String getDefVal() {
		return defVal;
		}
		public PropertyBuilder setDefVal(Object defVal) {
			switch (property.getPropertyType()) {
			case String:
				property.defVal = "\"" + defVal.toString() + "\"";
				break;
			default:
				property.defVal = defVal.toString();
				break;
			}
			return this;
		}


	entry.ftl
		private ${property.javaType} ${property.propertyName}<#if property.defVal??>=${property.defVal}</#if>;
